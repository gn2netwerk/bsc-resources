// basecondition ~ shadow v2.2.0
// copyright 2013 ~ Joachim Doerr ~ hello@basecondition.com 
// licensed under MIT or GPLv3 ~ git.io/n23c3Q

// ----------------------------------------------------- ~ shadow
//  #box > .shadow (  0, 0, 15px, #000, 0.9 );
//  #box > .shadow-inset (  0, 0, 5px, #000, 0.9 );
//  #box > .text-shadow (  0, 1px, 0, #000, 0.5 );

#box {
  .box-shadow ( @val ) {
    -webkit-box-shadow: @val;
       -moz-box-shadow: @val;
            box-shadow: @val;
  }
  .box-shadow-core ( @x, @y, @blur, @color, @alpha, @typ ) when ( @typ = box ) {
    @rgba: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    @val: @x @y @blur @rgba;
    #box > .box-shadow ( @val );
  }
  .box-shadow-core ( @x, @y, @blur, @color, @alpha, @typ ) when ( @typ = inset ) {
    @rgba: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    @val: @x @y @blur @rgba;
    #box > .box-shadow ( inset @val );
  }
  .shadow ( @x, @y, @blur, @color : #000, @alpha : 1 ) {
    #box > .box-shadow-core ( @x, @y, @blur, @color, @alpha, box );
  }
  .shadow-inset ( @x, @y, @blur, @color : #000, @alpha : 1 ) {
    #box > .box-shadow-core ( @x, @y, @blur, @color, @alpha, inset );
  }
  .text-shadow ( @val, @val-2 : false, @val-3 : false, @val-4 : false, @val-5 : false ) when ( @val-2 = false ) and ( @val-3 = false ) and ( @val-4 = false ) and ( @val-5 = false ) {
    text-shadow: @val;
    // filter: progid:DXImageTransform.Microsoft.Shadow(direction=135,strength=2,color=@color);
    // http://caniuse.com/css-textshadow
  }
  .text-shadow ( @x, @y : false, @blur : false, @color : false, @alpha : false ) when not ( @y = false ) and not ( @blur = false ) and not ( @color = false ) and not ( @alpha = false ) {
    @rgba: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    @val: @x @y @blur @rgba;
    
    #box > .text-shadow ( @val );
  }
}
